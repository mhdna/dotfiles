#!/bin/sh

image() {
        geometry="$(($2-2))x$3"
        chafa "$1" -f sixel -s "$geometry" --animate false
}

batorcat() {
	file="$1"
	shift
	if command -v bat > /dev/null 2>&1; then
		bat --color=always --style=plain --pager=never "$file" "$@"
	else
		cat "$file"
	fi
}

case "$(file --dereference --brief --mime-type -- "$1")" in
    image/avif) CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE" ] && convert "$1" "$CACHE.jpg"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1" ;;
    image/*) image "$1" "$2" "$3" "$4" "$5" "$1" ;;
    text/html) lynx -width="$4" -display_charset=utf-8 -dump "$1" ;;
    text/troff) man ./ "$1" | col -b ;;
    text/* | */xml | application/json) bat --style=plain --terminal-width "$(($4-2))" -f "$1" ;;
    audio/* | application/octet-stream) mediainfo "$1" || exit 1 ;;
    video/* )
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$1" -o "$CACHE" -s 0
        image "$CACHE" "$2" "$3" "$4" "$5" "$1"
        ;;
    */pdf)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    */epub+zip|*/mobi*)
        CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/lf/thumb.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | cut -d' ' -f1)"
        [ ! -f "$CACHE.jpg" ] && gnome-epub-thumbnailer "$1" "$CACHE.jpg"
        image "$CACHE.jpg" "$2" "$3" "$4" "$5" "$1"
        ;;
    application/*zip) atool --list -- "$1" ;;
    *opendocument*) odt2txt "$1" ;;
    application/pgp-encrypted) gpg -d -- "$1" ;;
    application/x-bittorrent) transmission-show "$1" ;;
    application/*iso*-image) iso-info --no-header -l "$1" ;;
    application/*officedocument.wordprocessingml*) docx2txt "$1" -;;
    application/*officedocument.spreadsheetml*)
        	ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
        	;;
    esac
    exit 0
