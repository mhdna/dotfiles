#!/bin/sh

# url this script a link and it will give dmenu
# some choice programs to use to open it.
url="${1:-$(printf "%s" | dmenu -p 'Paste url or file path')}"
base="$(basename "$url")"

case "$(printf "Copy url\\n$IMAGE\\nsetbg\\nPDF\\nbrowser\\nlynx\\nvim\\n$VIDEO\\n$VIDEOAudio\\n$VIDEO float\\nyt\\nyta\\nyt any quality\\nHtml\\nariaAdd\\nariaDownload" | dmenu -i -p "Open it with?")" in #\\nqueue download\\nqueue yt-dl\\nqueue yt-dl audio
	"Copy url") echo "$url" | tr -d '\n' | xclip -selection clipboard ;;
	$VIDEO) setsid -f $VIDEO -quiet "$url" >/dev/null 2>&1 ;;
	$VIDEOAudio) $TERMINAL -e $VIDEO -quiet --no-video "$url"  ;;
	# "$VIDEO loop") setsid -f $VIDEO -quiet --loop "$url" >/dev/null 2>&1 ;;
	# "$VIDEO float") setsid -f "$TERMINAL" -e $VIDEO --geometry=+0-0 --autofit=30%  --title="$VIDEOfloat" "$url" >/dev/null 2>&1 ;;
	"$VIDEO float") setsid -f $VIDEO --geometry=+0-0 --autofit=30%  --title="$VIDEOfloat" "$url" >/dev/null 2>&1 ;;
	"yt")  notify-send "🎥 downloading "$base""
		setsid -f yt-dlp --external-downloader aria2c -f 22 -P "$XDG_VIDEOS_DIR/yt" "$url" > /dev/null 2>&1 ;;
	"yt any quality")  notify-send "🎥 downloading "$base""
		setsid -f yt-dlp --external-downloader aria2c -P "$XDG_VIDEOS_DIR/yt" "$url" > /dev/null 2>&1 ;;
	"yta")  notify-send "📢 downloading "$base""
		yt-dlp --remux-video ogg -f bestaudio/best -P "$XDG_MUSIC_DIR" --external-downloader aria2c "$url" > /dev/null 2>&1;;
	# "Max 720") qndl "$url" 'yt-dlp -f bestvideo[height<=?720]+bestaudio/best -P $XDG_VIDS_DIR/yt --add-metadata -icx' >/dev/null 2>&1 ;;
	#"queue yt-dl") qndl "$url" >/dev/null 2>&1 ;;
	#"queue yt-dl audio") qndl "$url" 'yt-dlp -f bestaudio/best --add-metadata -icx' >/dev/null 2>&1 ;;
	#"queue download") qndl "$url" 'curl -LO' >/dev/null 2>&1 ;;
	PDF) curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" && zathura "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 ;;
	$IMAGE) curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" && $IMAGE -a "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 ;;
	vim) curl -sL "$url" > "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")" && setsid -f "$TERMINAL" -e "$EDITOR" "/tmp/$(echo "$url" | sed "s/.*\///;s/%20/ /g")"  >/dev/null 2>&1 ;;
	setbg) curl -L "$url" > $XDG_CACHE_HOME/pic ; xwallpaper --zoom $XDG_CACHE_HOME/pic >/dev/null 2>&1 ;;
	browser) setsid -f "$BROWSER" "$url" >/dev/null 2>&1 ;;
	lynx) lynx "$url" >/dev/null 2>&1 ;;
	PDF) wkhtmltopdf "$url" "$XDG_DOCUMENTS_DIR/readlater/$base.pdf"
	     notify-send "📜 $base.pdf downloaded"  ;;
	#|| notify-send "❗Exporting $base pdf failed" && exit 1
	Html) single-file --browser-executable-path /usr/bin/chromium "$url" --output-directory "$XDG_DOCUMENTS_DIR/readlater"
	      notify-send "📜 $base downloaded" ;;
	ariaAdd) aria2c -i /tmp/ariaxclip -d "$HOME/.aria2/sequences" "$url" && notify-send -u low 'Sequence Downloaded ✅' && mv /tmp/ariaxclip "$HOME/.aria2/sequences/done.txt" ;;
	ariaDownload) aria2c -d "$HOME/.aria2/files" "$url" && notify-send -u low 'File Downloaded ✅' ;;
esac
