#!/usr/bin/env bash

# download youtube videos with their thumbnails in a custom format

if [ -n "$WAYLAND_DISPLAY" ]; then
    menu="tofi --prompt-text Format"
else
    menu="mybemenu -p Format"
fi

bmdirs="${XDG_CONFIG_HOME:-$HOME/.config}/shell/all-dirs"

f=("Video MAX-RES=1080" "Audio")
case "$(printf "%s\n" "${f[@]}" | $menu)" in
"${f[0]}")
    args="--write-subs --write-auto-subs -S res:1080"
    dst="$(grep -Ei '(/tmp/|vid)' "$bmdirs" | $menu)"
    ;;
"${f[1]}")
    audio=1
    args="--remux-video opus -f bestaudio/best"
    dst="$(grep -Ei '(/tmp/|music)' "$bmdirs" | $menu)"
    ;;
*) exit 1 ;;
esac

[ -z "$dst" ] && exit 1

for url in "$@"; do
    # do not download playlists, only video of that playlist
    yt-dlp $args -o "%(title)s.%(ext)s" --embed-thumbnail --no-playlist --external-downloader aria2c --write-thumbnail --convert-thumbnails jpg --add-metadata -ic -P "$dst" "$url" || {
        notify-send "‚ùå Downloading $url failed."
        exit 1
    }

    IFS=$'\n' readarray -t filename_title <<<"$(yt-dlp --skip-download --get-filename --get-title -o "%(title)s.%(ext)s" "$url")"

    title="${filename_title[0]}"
    filename="${filename_title[1]}"

    echo "$title"
    echo "$filename"

    if [ "$audio" = 1 ]; then
        thumb_filename="${filename%.*}.jpg"
        old_path="$dst/$thumb_filename"
        # smaller thumbnail resolution  for audio files
        convert -resize '250x250>' "$old_path" "$XDG_CACHE_HOME/yt-audio-thumbnails/$thumb_filename"
        rm "$old_path"
    fi

    notify-send "üëç $title done."
done
